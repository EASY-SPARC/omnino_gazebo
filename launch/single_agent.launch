<?xml version="1.0" encoding="UTF-8"?>
<launch>
	<arg name="debug" default="false"/>
	<arg name="gui" default="true"/>
	<arg name="headless" default="false"/>
	<arg name="paused" default="false"/>
	<arg name="use_sim_time" default="true"/>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="debug" value="$(arg debug)"/>
		<arg name="gui" value="$(arg gui)"/>
		<arg name="paused" value="$(arg paused)"/>
		<arg name="use_sim_time" value="$(arg use_sim_time)"/>
		<arg name="headless" value="$(arg headless)"/>
		<arg name="world_name" value="worlds/empty.world"/>
	</include>

	<!--spawm agent 1-->

	<param name="robot_1/robot_description" command="$(find xacro)/xacro '$(find omnino)/xacro/main.urdf.xacro'"/>

	<node name="inv_kine" pkg="omnino" type="inv_kine.py" output="screen" args="1"/>
	
    <node ns="robot_1" name="omnino_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model robot -x 0 -y 0 -Y 0 -param robot_description -model robot_1"/>

	<rosparam ns="robot_1" command="load" file="$(find omnino)/config/joint_velocity.yaml" />

	<node
		ns="robot_1"
		name="controller_spawner"
		pkg="controller_manager"
		type="spawner"
		respawn="false"
		output="screen"
		args="joint_state_controller
		wheels_velocity_controller"
	/>
	<node
		ns="robot_1"
		name="odometry"
		pkg="omnino"
		type="omnino_odometry"
		output="screen"
		args="robot_1"
	/>

	<node ns="robot_1" name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" args="-param robot_description"/>
	<node ns="robot_1" pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" args="-param robot_description">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

	<!--arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />
	<node ns="robot_1" name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" /-->

  	<!-- Run the map server >
 	<arg name="map_file" default="$(find omnino)/maps/jackal_race.yaml"/>
 	<node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" /-->

	
</launch>
