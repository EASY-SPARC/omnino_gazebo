<?xml version="1.0"?>
<robot
	xmlns:xacro="http://www.ros.org/wiki/xacro"
	name="omnino">
	<xacro:include filename="$(find omnino)/xacro/rim.urdf.xacro"/>
	<xacro:include filename="$(find omnino)/xacro/layer1.urdf.xacro"/>
	<xacro:include filename="$(find omnino)/xacro/socket.urdf.xacro"/>
	<xacro:property name="base_r" value="${0.063}" />
	<link name="origin_link"/>
	<link name="map"/>
	<link name="base_link">
		<inertial>
			<mass value="0.7862944645"/>
			<inertia
				ixx="0.0002035985530754" 
				ixy="0"
				ixz="0"
				iyy="0.0002035985530754"
				iyz="0"
				izz="0.0003945961663220"
			/>
		</inertial>
		<visual>
			<geometry>
				<mesh filename="package://omnino/mesh/chassis_hull.dae" scale="0.001 0.001 0.001"/>
			</geometry>
		</visual>
		<collision>
			<geometry>
				<mesh filename="package://omnino/mesh/chassis_hull.dae" scale="0.001 0.001 0.001"/>
			</geometry>
		</collision>
	</link>
	<joint
		name="base_joint"
		type="fixed">
		<parent link="origin_link" />
		<child link="base_link" />
		<origin xyz="0 0 0.0175" rpy="0 0 ${-pi/2}"/>
	</joint>
	<joint
		name="map_joint"
		type="fixed">
		<parent link="origin_link" />
		<child link="map" />
		<origin xyz="0 0 0" rpy="0 0 0"/>
	</joint>

	<xacro:layer1
		height="0.025"/>
	<xacro:rim_macro
		name="left"
		xyz="${-base_r*cos(radians(30))} ${base_r*sin(radians(30))} 0"
		rpy="${pi/2} 0 ${pi/3}"/>
	<xacro:rim_macro
		name="back"
		xyz="0 ${-base_r} 0"
		rpy="${pi/2} 0 ${pi}"/>
	<xacro:rim_macro
		name="right"
		xyz="${base_r*cos(radians(30))} ${base_r*sin(radians(30))} 0"
		rpy="${pi/2} 0 ${-pi/3}"/>
	<xacro:socket
		name="front"
		xyz="${(base_r-0.006)*sin(radians(0))} ${(base_r-0.006)*cos(radians(0))} 0.028"
		rpy="0 0 ${0}"/>
	<xacro:socket
		name="back_right"
		xyz="${(base_r-0.006)*sin(radians(120))} ${(base_r-0.006)*cos(radians(120))} 0.028"
		rpy="0 0 ${radians(-120)}"/>
	<xacro:socket
		name="back_left"
		xyz="${(base_r-0.006)*sin(radians(-120))} ${(base_r-0.006)*cos(radians(-120))} 0.028"
		rpy="0 0 ${radians(120)}"/>
	<gazebo reference="base_link">
		<material>Gazebo/Orange</material>
	</gazebo>
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
		</plugin>
	</gazebo>

	<!-- Laser Scan -->
	<link name="/robot_1/hokuyo_link">
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
		</collision>
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 0.1"/>
			</geometry>
		</visual>
		<inertial>
			<mass value="1e-5" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
		</inertial>
	</link>

	<joint name="hokuyo_joint" type="fixed">
		<axis xyz="0 1 0" />
		<origin xyz="0 0 0.2" rpy="0 0 0"/>
		<parent link="base_link"/>
		<child link="/robot_1/hokuyo_link"/>
	</joint>

	<gazebo reference="/robot_1/hokuyo_link">
		<sensor type="ray" name="hokuyo">
			<pose>0 0 0 0 0 0</pose>
			<visualize>false</visualize>
			<update_rate>40</update_rate>
			<ray>
				<scan>
					<horizontal>
						<samples>720</samples>
						<resolution>1</resolution>
						<min_angle>-1.570796</min_angle>
						<max_angle>1.570796</max_angle>
					</horizontal>
				</scan>
				<range>
					<min>0.10</min>
					<max>30.0</max>
					<resolution>0.01</resolution>
				</range>
			</ray>
			<plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
				<topicName>front/scan</topicName>
				<frameName>hokuyo_link</frameName>
           	 		<robotNamespace>robot_1</robotNamespace>
			</plugin>
		</sensor>
	</gazebo>

</robot>
